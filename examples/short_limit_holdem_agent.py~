''' An example of playing against a rule-based agents tournament on Short Deck Limit Hold'em
'''

import rlcard
from rlcard.utils.utils import print_card
from rlcard.models.shortlimitholdem_rule_models import ShortLimitholdemRuleModel1
from rlcard.models.shortlimitholdem_rule_models import ShortLimitholdemRuleModel2

# Make environment and enable human mode
# Set 'record_action' to True because we need it to print results
env = rlcard.make('short-limit-holdem', config={'record_action': True})
model1 = ShortLimitholdemRuleModel1()
model2 = ShortLimitholdemRuleModel2()
agent1 = model1.agents[0]
agent2 = model2.agents[0]

print(">> Short Limit Hold'em rule-based agent")

round_num = 0
while (round_num < 10):
    print(">> Start a new game")

    trajectories, payoffs = env.run(is_training=False)
    for i in range(1, len(action_record)+1):
            """
            if action_record[-i][0] == state['current_player']:
                break
            """
            _action_list.insert(0, action_record[-i])
    print('===============     Result     ===============')
    if payoffs[0] > 0:
        print('You win {} chips!'.format(payoffs[0]))
    elif payoffs[0] == 0:
        print('It is a tie.')
    else:
        print('You lose {} chips!'.format(-payoffs[0]))
    print('')

input("Press any key to continue...")
